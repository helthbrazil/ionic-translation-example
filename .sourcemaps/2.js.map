{"version":3,"sources":["../../src/pages/config/config.module.ts","../../src/pages/config/config.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACV;AACU;AAUhD;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAR5B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAU;aACX;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,2DAAU,CAAC,EAAC,sEAAe;aACrD;SACF,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACba;AACe;AACR;AACI;AAOrD;IAOE,oBAAmB,OAAsB,EAAS,SAAoB,EAC5D,SAA2B,EAAU,KAAY;QADxC,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAC5D,cAAS,GAAT,SAAS,CAAkB;QAAU,UAAK,GAAL,KAAK,CAAO;QAP1C,eAAU,GAAW,IAAI,CAAC;QAC1B,YAAO,GAAW,IAAI,CAAC;QACvB,YAAO,GAAW,IAAI,CAAC;IAMxC,CAAC;IAED,mCAAc,GAAd;QACE,IAAI,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAChD,EAAE,CAAC,CAAC,QAAQ,CAAC;YACX,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;QACnC,IAAI;YACF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IACjC,CAAC;IAED,mCAAc,GAAd;QAAA,iBAeC;QAdC,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAC7C,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YACvC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjD,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YACvC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjD,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YACvC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC;QAED,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,SAAS,CAAC,aAAG;YACrD,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE,sEAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAe,GAAf;QACE,IAAI,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAChD,EAAE,CAAC,CAAC,QAAQ,CAAC;YACX,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC/B,IAAI;YACF,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,mCAAc,GAAd,UAAe,QAAQ;QACrB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC/B,CAAC;IA9CU,UAAU;QAJtB,wEAAS,CAAC;YACT,QAAQ,EAAE,aAAa;WACG;SAC3B,CAAC;6JAQsE;YACjD,OAAsC;OARhD,UAAU,CAgDtB;IAAD,CAAC;AAAA;SAhDY,UAAU,e","file":"2.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ConfigPage } from './config';\nimport { TranslateModule } from 'ng2-translate';\n\n@NgModule({\n  declarations: [\n    ConfigPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ConfigPage),TranslateModule\n  ],\n})\nexport class ConfigPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/config/config.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { TranslateService } from 'ng2-translate';\nimport { Toast } from '../../componentesIonic/toast';\n\n@IonicPage()\n@Component({\n  selector: 'page-config',\n  templateUrl: 'config.html',\n})\nexport class ConfigPage {\n  private readonly PORTUGUESE: string = 'pt';\n  private readonly ENGLISH: string = 'en';\n  private readonly SPANISH: string = 'es';\n\n  private languageSelected: string;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams,\n    private translate: TranslateService, private toast: Toast) {\n  }\n\n  ionViewDidLoad() {\n    let language = localStorage.getItem(\"language\");\n    if (language)\n      this.languageSelected = language;\n    else\n      this.languageSelected = \"pt\";\n  }\n\n  updateLanguage() {\n    if (this.languageSelected == this.PORTUGUESE) {\n      localStorage.setItem('language', \"pt\");\n      this.translate.use('pt');\n    } else if (this.languageSelected == this.ENGLISH) {\n      localStorage.setItem('language', \"en\");\n      this.translate.use('en');\n    } else if (this.languageSelected == this.SPANISH) {\n      localStorage.setItem('language', \"es\");\n      this.translate.use('es');\n    }\n\n    this.translate.get(\"linguagemAtualizada\").subscribe(msg => {\n      this.toast.showToast(msg, Toast.BOTTOM, 3000);\n    });\n  }\n\n  ionViewDidLeave() {\n    let language = localStorage.getItem(\"language\");\n    if (language)\n      this.translate.use(language);\n    else\n      this.translate.use('pt');\n  }\n\n  selectLanguage(language) {\n    this.translate.use(language);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/config/config.ts"],"sourceRoot":""}